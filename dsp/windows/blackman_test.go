package windows

import (
	"math"
	"testing"
)

var closeFactor = 1e-8

func float64Equal(a, b float64) bool {
	return math.Abs(a-b) <= closeFactor || math.Abs(1-a/b) <= closeFactor
}

func TestBlackmann(t *testing.T) {
	expected := []float64{
		-1.3877787807814457e-17, 0.0003705047306915149, 0.0014885821314992581, 0.0033737620921490546, 0.006058064810356409, 0.00958521624410219, 0.01400956933480732, 0.019394750197489097, 0.025812053403147295, 0.03333861500387118, 0.04205539599650428, 0.05204501241810308, 0.06338945115686861, 0.07616771279672704, 0.09045342435412804, 0.1063124655852105, 0.1238006526254706, 0.1429615220698088, 0.16382425721789776, 0.18640179611981533, 0.2106891582931365, 0.23666202358964922, 0.2642755927224567, 0.29346375448687384, 0.3241385797941454, 0.3561901573658007, 0.38948678039455564, 0.4238754877558361, 0.45918295754596355, 0.4952167449241689, 0.5317668505411229, 0.5686076003402915, 0.605499812310644, 0.6421932209359956, 0.6784291257073802, 0.7139432262128614, 0.7484686030580439, 0.7817388012545962, 0.8134909707872374, 0.8434690178644608, 0.8714267198957117, 0.8971307575265366, 0.9203636180999081, 0.940926326680829, 0.9586409632547708, 0.9733529278493858, 0.9849329190832143, 0.9932785959547453, 0.9983158974810278, 0.9999999999999999, 0.9983158974810278, 0.9932785959547454, 0.9849329190832143, 0.9733529278493859, 0.9586409632547709, 0.940926326680829, 0.9203636180999083, 0.8971307575265368, 0.871426719895712, 0.8434690178644609, 0.8134909707872378, 0.7817388012545962, 0.7484686030580441, 0.7139432262128617, 0.6784291257073805, 0.6421932209359961, 0.6054998123106441, 0.5686076003402917, 0.5317668505411228, 0.4952167449241689, 0.45918295754596383, 0.42387548775583583, 0.38948678039455553, 0.3561901573658007, 0.3241385797941456, 0.2934637544868741, 0.2642755927224572, 0.23666202358964933, 0.21068915829313667, 0.18640179611981533, 0.16382425721789773, 0.1429615220698089, 0.12380065262547083, 0.10631246558521054, 0.09045342435412812, 0.07616771279672714, 0.0633894511568687, 0.05204501241810329, 0.042055395996504416, 0.03333861500387112, 0.025812053403147288, 0.019394750197489118, 0.01400956933480732, 0.009585216244102246, 0.006058064810356409, 0.0033737620921490408, 0.0014885821314992859, 0.00037050473069148715, -1.3877787807814457e-17,
	}
	winData := Blackman(99)
	for i, x := range winData {
		if !float64Equal(x, expected[i]) {
			t.Logf("[%d] expected %f, got %f\n", i, expected[i], x)
			t.Fatal()
		}
	}
}
